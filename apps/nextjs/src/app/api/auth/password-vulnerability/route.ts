import { NextResponse } from "next/server";
import { pwnedPassword } from "hibp";

interface PasswordVulnerabilityRequest {
  password: string;
}

interface PasswordVulnerabilityResponse {
  numPwns: number;
}

export async function POST(req: Request) {
  const { password } = (await req.json()) as PasswordVulnerabilityRequest;

  // Input validation
  if (!password) {
    return NextResponse.json(
      { error: "Password is required" },
      { status: 400 }
    );
  }

  try {
    // Check if password has been pwned
    const numPwns: number = await pwnedPassword(password, {
      addPadding: true,
    });

    // Send response with number of pwns
    const response: PasswordVulnerabilityResponse = { numPwns };

    return NextResponse.json(response);
  } catch (error) {
    console.error("Unknown error:", error);
    return NextResponse.json(
      { error: "An error occurred checking the vulnerability" },
      { status: 500 }
    );
  }
}
